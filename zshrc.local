# .zshrc.local
# This file is used together with grml-zsh's .zshrc

# export TERM="rxvt-unicode-256color"

# export ADB_TRACE=all
unalias ag

export PATH=$PATH:~/bin
export PATH=$PATH:~/bin/bin
export PATH=$PATH:~/bin/lib

export HISTFILE=~/.zsh-history
export HISTSIZE=1000000
export SAVEHIST=$HISTSIZE

export MAKEFLAGS="-j8"
export EDITOR="vim"

export MANWIDTH=${MANWIDTH:-80}

export RIPGREP_CONFIG_PATH=$HOME/dotfiles/ripgreprc

setopt auto_cd              # Change dir without cd
setopt complete_in_word     # Not just at the end
setopt always_to_end        # When complete from middle, move cursor
setopt no_match             # Show error if pattern has no matches
setopt no_beep              # Disable beeps
setopt list_types           # Show types in completion
setopt hist_ignore_space    # Don't add commands preceded by space to history
setopt hist_reduce_blanks
setopt append_history
setopt share_history
setopt inc_append_history
setopt correct              # Command correction
setopt no_clobber           # warning if file exists (cat /dev/null > ~/.zshrc)

# use the vi navigation keys (hjkl) besides cursor keys in menu completion
bindkey -M menuselect 'h' vi-backward-char
bindkey -M menuselect 'k' vi-up-line-or-history
bindkey -M menuselect 'l' vi-forward-char
bindkey -M menuselect 'j' vi-down-line-or-history

alias m='make'

alias vim='vim -p'
alias v='vim'

alias fn='find . -name'

alias dirsum='echo -n "$(basename $(pwd)): " && find . -type f -exec cat {} + | md5sum'
alias dirsumeach='for i in *; do echo -n "$i: "; find $i -type f -exec cat {} + | md5sum; done'

alias ash='adb wait-for-device shell'
alias adev='adb devices'
alias akmsg='adb wait-for-device; echo connect; adb shell "while true; do cat /proc/kmsg | grep SW; done"'
alias atest='adb shell /vendor/tee/tee_test'
alias aps='adb shell tee_ps'

alias sdk='cd ~/work/sdk_tzsl'
alias sdk4='cd ~/work/main4/sdk_tzsl_main4'
alias sk='cd ~/work/secure-kernel'
alias sk4='cd ~/work/main4/secure-kernel_main4'
alias ta='cd ~/work/sdk_tzsl/tests/ta'
alias ca='cd ~/work/sdk_tzsl/tests/client'
alias tzsl='cd ~/work/sdk_tzsl/src/tzsl'
alias teesl='cd ~/work/sdk_tzsl/src/teesl'

alias submit_sdk_head='~/bin/submit_to_review.py -O HEAD~1'
alias submit_all_head='~/bin/submit_to_review.py -O HEAD~1 -E ../secure-kernel HEAD~1 '

alias sqi='s q i'
alias vbjson='vim ~/work/sdk_tzsl/tests/autotest/scenarios/base.json'

alias pip3_update='pip list --outdated --format=freeze | grep -v '\''^\-e'\'' | cut -d = -f 1  | xargs -n1 pip install --user --upgrade'

alias gst='git status'
alias gad='git add'
alias gada='git add -A'
alias gadu='git add -u'
alias gco='git checkout'
alias gd='git diff --color=auto'
alias gds='git diff --color=auto --staged'
alias gcom='git commit'
alias gcom!='git commit --amend'
alias gcomm!='git commit --amend --no-edit'
alias gl="git log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%ar) %C(bold blue)<%an>%Creset' --abbrev-commit --all"
alias glfull="git log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%ad) %C(bold blue)<%an>%Creset' --abbrev-commit --date=format:'%y-%m-%d %H:%M:%S' --all"
alias glc="git log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --all"
alias glfullc="git log --graph --pretty=format:'%Cred%h%Creset%C(yellow)%d%Creset %s %Cgreen(%cd) %C(bold blue)<%an>%Creset' --abbrev-commit --date=format:'%y-%m-%d %H:%M:%S' --all"
alias gp='git push origin master'
alias grc='git rebase --continue'
alias grom='git rebase origin/master'
alias gr='git rebase'
alias gri='git rebase -i'
alias gf='git fetch' # tfw no
alias gsh='git show'
alias grh='git reset HEAD'
alias gpl='git pull'
alias gssh='git stash'
alias gsshp='git stash pop'

alias tmrw='tmux rename-window'
alias tmrs='tmux rename-session'

alias relf='readelf -W -a'

alias t='tree'

alias c='cat'

function mdd() {
	mkdir -p $1 && cd $1
}

set -o vi

# Prompt
# ------------------------------------------------------------------------------

function load_colors() {
	if is437; then
		BLUE="%F{blue}"
		RED="%F{red}"
		GREEN="%F{green}"
		CYAN="%F{cyan}"
		MAGENTA="%F{magenta}"
		YELLOW="%F{yellow}"
		WHITE="%F{white}"
		NO_COLOR="%f"
	elif zrcautoload colors && colors 2>/dev/null ; then
		BLUE="%{${fg[blue]}%}"
		RED="%{${fg_bold[red]}%}"
		GREEN="%{${fg[green]}%}"
		CYAN="%{${fg[cyan]}%}"
		MAGENTA="%{${fg[magenta]}%}"
		YELLOW="%{${fg[yellow]}%}"
		WHITE="%{${fg[white]}%}"
		NO_COLOR="%{${reset_color}%}"
	else
		BLUE=$'%{\e[1;34m%}'
		RED=$'%{\e[1;31m%}'
		GREEN=$'%{\e[1;32m%}'
		CYAN=$'%{\e[1;36m%}'
		WHITE=$'%{\e[1;37m%}'
		MAGENTA=$'%{\e[1;35m%}'
		YELLOW=$'%{\e[1;33m%}'
		NO_COLOR=$'%{\e[0m%}'
	fi
}

function unload_colors() {
	builtin unset -v BLUE RED GREEN CYAN YELLOW MAGENTA WHITE NO_COLOR
}

load_colors

prompt off
local user_color="${GREEN}"
[ $UID -eq 0 ] && user_color="${RED}"
local user="${user_color}%n${NO_COLOR}"
local dir="${BLUE}%1~${NO_COLOR}"

PROMPT="$user $dir ${user_color}$ ${NO_COLOR}"

function git_get_branch() {
	git symbolic-ref HEAD 2> /dev/null | sed 's|refs/heads/||'
}

function git_prompt_status() {
	load_colors

	local ZSH_THEME_GIT_PROMPT_ADDED="${GREEN}+"
	local ZSH_THEME_GIT_PROMPT_MODIFIED="${BLUE}*"
	local ZSH_THEME_GIT_PROMPT_DELETED="${RED}-"
	local ZSH_THEME_GIT_PROMPT_STASHED="${YELLOW}#"
	local ZSH_THEME_GIT_PROMPT_RENAMED="${MAGENTA}R"
	local ZSH_THEME_GIT_PROMPT_UNTRACKED="${CYAN}?"
	local INDEX=$(command git status --porcelain -b 2> /dev/null)
	local STATUS=""

	if $(echo "$INDEX" | grep -E '^\?\? ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_UNTRACKED$STATUS"
	fi
	if $(echo "$INDEX" | grep '^A ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
	elif $(echo "$INDEX" | grep '^M ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_ADDED$STATUS"
	fi
	if $(echo "$INDEX" | grep '^ M ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
	elif $(echo "$INDEX" | grep '^AM ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
	elif $(echo "$INDEX" | grep '^ T ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_MODIFIED$STATUS"
	fi
	if $(echo "$INDEX" | grep '^R ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_RENAMED$STATUS"
	fi
	if $(echo "$INDEX" | grep '^ D ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
	elif $(echo "$INDEX" | grep '^D ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
	elif $(echo "$INDEX" | grep '^AD ' &> /dev/null); then
		STATUS="$ZSH_THEME_GIT_PROMPT_DELETED$STATUS"
	fi
	if $(command git rev-parse --verify refs/stash >/dev/null 2>&1); then
		STATUS="$ZSH_THEME_GIT_PROMPT_STASHED$STATUS"
	fi

	unload_colors

	echo $STATUS
}

function precmd {
	load_colors

	local return_code="${RED}%(?..%? â†µ)${NO_COLOR} "

	local fromvim=""
	if [[ $FROMVIM -eq 1 ]] fromvim="${GREEN}Vim${NO_COLOR} "

	local gitness=""
	[[ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" = "true" ]] &&
		gitness="$(git_get_branch)$(git_prompt_status)${NO_COLOR}"

	RPROMPT="${return_code}${fromvim}${gitness}"

	unload_colors
}

unload_colors

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

